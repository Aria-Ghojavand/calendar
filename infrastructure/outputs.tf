output "cluster_id" {
  description = "EKS cluster ID"
  value       = aws_eks_cluster.main.id
}

output "cluster_arn" {
  description = "EKS cluster ARN"
  value       = aws_eks_cluster.main.arn
}

output "cluster_endpoint" {
  description = "Endpoint for EKS control plane"
  value       = aws_eks_cluster.main.endpoint
}

output "cluster_security_group_id" {
  description = "Security group ids attached to the cluster control plane"
  value       = aws_eks_cluster.main.vpc_config[0].cluster_security_group_id
}

output "kubectl_config" {
  description = "kubectl config as generated by the module"
  value = templatefile("${path.module}/kubeconfig.tpl", {
    cluster_name     = aws_eks_cluster.main.name
    endpoint         = aws_eks_cluster.main.endpoint
    certificate_data = aws_eks_cluster.main.certificate_authority[0].data
    region           = var.aws_region
  })
}

output "node_groups" {
  description = "EKS node groups"
  value       = aws_eks_node_group.main
}

output "vpc_id" {
  description = "ID of the VPC where the cluster is deployed"
  value       = aws_vpc.main.id
}

output "private_subnets" {
  description = "List of IDs of private subnets"
  value       = aws_subnet.private[*].id
}

output "public_subnets" {
  description = "List of IDs of public subnets"
  value       = aws_subnet.public[*].id
}

output "rds_endpoint" {
  description = "RDS instance endpoint"
  value       = aws_db_instance.main.endpoint
  sensitive   = true
}

output "redis_endpoint" {
  description = "ElastiCache Redis endpoint"
  value       = aws_elasticache_replication_group.main.primary_endpoint_address
  sensitive   = true
}

output "efs_id" {
  description = "EFS file system ID"
  value       = aws_efs_file_system.main.id
}

output "efs_access_point_id" {
  description = "EFS access point ID"
  value       = aws_efs_access_point.app.id
}

output "ecr_repository_url" {
  description = "ECR repository URL"
  value       = aws_ecr_repository.unicorn.repository_url
}

output "appconfig_application_id" {
  description = "AWS AppConfig application ID"
  value       = aws_appconfig_application.unicorn.id
}

output "appconfig_environment_id" {
  description = "AWS AppConfig environment ID"
  value       = aws_appconfig_environment.production.environment_id
}

output "appconfig_configuration_profile_id" {
  description = "AWS AppConfig configuration profile ID"
  value       = aws_appconfig_configuration_profile.unicorn.configuration_profile_id
}

output "db_secret_arn" {
  description = "ARN of the database credentials secret"
  value       = aws_secretsmanager_secret.db_credentials.arn
}

output "load_balancer_controller_role_arn" {
  description = "IAM role ARN for AWS Load Balancer Controller"
  value       = aws_iam_role.aws_load_balancer_controller.arn
}

output "cluster_autoscaler_role_arn" {
  description = "IAM role ARN for Cluster Autoscaler"
  value       = aws_iam_role.cluster_autoscaler.arn
}

output "efs_csi_driver_role_arn" {
  description = "IAM role ARN for EFS CSI Driver"
  value       = aws_iam_role.efs_csi_driver.arn
}

output "unicorn_app_role_arn" {
  description = "IAM role ARN for Unicorn application"
  value       = aws_iam_role.unicorn_app.arn
}