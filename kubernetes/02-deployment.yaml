apiVersion: apps/v1
kind: Deployment
metadata:
  name: unicorn-app
  namespace: unicorn-app
  labels:
    app: unicorn-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: unicorn-app
  template:
    metadata:
      labels:
        app: unicorn-app
    spec:
      serviceAccountName: unicorn-service
      containers:
      - name: unicorn-app
        image: ${ECR_REPOSITORY_URL}:latest
        ports:
        - containerPort: 80
          name: http
        env:
        - name: AWS_REGION
          valueFrom:
            configMapKeyRef:
              name: unicorn-config
              key: AWS_REGION
        - name: APP_CONFIG_APPLICATION
          valueFrom:
            configMapKeyRef:
              name: unicorn-config
              key: APP_CONFIG_APPLICATION
        - name: APP_CONFIG_ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: unicorn-config
              key: APP_CONFIG_ENVIRONMENT
        - name: APP_CONFIG_CONFIGURATION
          valueFrom:
            configMapKeyRef:
              name: unicorn-config
              key: APP_CONFIG_CONFIGURATION
        - name: DB_SECRET_ARN
          valueFrom:
            secretKeyRef:
              name: unicorn-db-secret
              key: secret-arn
        volumeMounts:
        - name: efs-cache
          mountPath: /app-cache
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi" 
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
      volumes:
      - name: efs-cache
        persistentVolumeClaim:
          claimName: efs-claim
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - unicorn-app
              topologyKey: kubernetes.io/hostname
---
# Horizontal Pod Autoscaler
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: unicorn-app-hpa
  namespace: unicorn-app
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: unicorn-app
  minReplicas: 2
  maxReplicas: 20
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60